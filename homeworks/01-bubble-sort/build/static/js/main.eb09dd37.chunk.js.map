{"version":3,"sources":["Components/Header/index.tsx","Components/Visualize/index.tsx","Components/Controls/index.tsx","helpers.ts","App.tsx","constants.ts","index.tsx"],"names":["Header","Wrap","styled","ul","Pillar","li","props","itemHeight","Visualize","unsortedArr","map","item","div","SolvedStatus","span","Controls","setNewSet","setAction","removeAction","status","isSolved","arrLength","changeArrLength","delay","changeDelay","type","value","onChange","onClick","disabled","customArr","length","randomArr","i","a","Math","round","random","indexOf","push","Container","App","state","currentItem","sortedCount","interval","undefined","clearInterval","setState","sort","newUnsortedArr","setInterval","e","newDelay","target","console","log","newLength","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb09dd37.chunk.js","sourcesContent":["export default function Header () {\n    return <h1> Bubble sort üõÅ</h1>\n}","import { FunctionComponent } from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrap = styled.ul`\n  display: flex;\n  list-style: none;\n  align-items: flex-end;\n  height: 200px;\n`;\n\nconst Pillar = styled.li`\n  width: 15px;\n  background-color: #fff;\n  border: 1px solid black;\n  border-radius: 10px 10px 0 0;\n  height: ${(props: { itemHeight: number }) => props.itemHeight * 2}px;\n`;\n\ninterface VisualizeProps {\n  unsortedArr: number[];\n}\n\nconst Visualize: FunctionComponent<VisualizeProps> = ({ unsortedArr }) => {\n  return (\n    <Wrap>\n      {unsortedArr.map((item) => (\n        <Pillar itemHeight={item} key={item} />\n      ))}\n    </Wrap>\n  );\n};\n\nexport default Visualize;\n","import { EventHandler, SyntheticEvent } from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrap = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n`;\n\nconst SolvedStatus = styled.span`\n  width: 100%;\n  text-align: center;\n`;\n\ninterface ControlsProps {\n  setNewSet: () => void;\n  setAction: () => void;\n  removeAction: () => void;\n  changeArrLength: EventHandler<SyntheticEvent>;\n  changeDelay: EventHandler<SyntheticEvent>;\n  status: string;\n  isSolved: boolean;\n  arrLength: number;\n  delay: number;\n}\n\nconst Controls: React.FunctionComponent<ControlsProps> = ({\n  setNewSet,\n  setAction,\n  removeAction,\n  status,\n  isSolved,\n  arrLength,\n  changeArrLength,\n  delay,\n  changeDelay,\n}) => {\n  return (\n    <Wrap>\n      <label>\n        <input type=\"number\" value={arrLength} onChange={changeArrLength} />{\" \"}\n        Array length\n      </label>\n      <label>\n        <input type=\"number\" value={delay} onChange={changeDelay} /> Delay\n      </label>\n      <button onClick={setNewSet}>newSet</button>\n      <button\n        onClick={status === \"Start\" ? setAction : removeAction}\n        disabled={isSolved}\n      >\n        {status === \"Start\" ? \"Start\" : \"Pause\"}\n      </button>\n      <SolvedStatus>{isSolved ? \"Solved\" : \"Not solved\"}</SolvedStatus>\n    </Wrap>\n  );\n};\n\nexport default Controls;\n","type CustomArr = (length: number) => number[];\n\nexport const customArr: CustomArr = (length) => {\n  const randomArr: number[] = [];\n\n  for (let i = 0; i < length; i++) {\n    const a = Math.round(Math.random() * 100);\n    if (~randomArr.indexOf(a)) {\n      i--;\n    } else {\n      randomArr.push(a);\n    }\n  }\n  return randomArr;\n};\n","import Header from \"./Components/Header\";\nimport Visualize from \"./Components/Visualize\";\nimport Controls from \"./Components/Controls\";\nimport { Component, EventHandler, SyntheticEvent } from \"react\";\nimport styled from \"styled-components\";\nimport { customArr } from \"./helpers\";\nimport { DELAY, LENGTH } from \"./constants\";\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n`;\n\ninterface State {\n  unsortedArr: number[];\n  status: string;\n  currentItem: number;\n  sortedCount: number;\n  interval: number | undefined;\n  isSolved: boolean;\n  arrLength: number;\n  delay: number;\n}\n\nclass App extends Component {\n  state: State = {\n    arrLength: LENGTH,\n    unsortedArr: [],\n    status: \"Start\",\n    currentItem: 1,\n    sortedCount: 1,\n    interval: undefined,\n    isSolved: false,\n    delay: DELAY,\n  };\n\n  setNewSet = (): void => {\n    if (this.state.interval) clearInterval(this.state.interval);\n    this.setState({\n      unsortedArr: customArr(this.state.arrLength),\n      currentItem: 1,\n      sortedCount: 1,\n      isSolved: false,\n      status: \"Start\",\n    });\n  };\n\n  sort = () => {\n    const { currentItem, sortedCount, unsortedArr, interval } = this.state;\n    if (sortedCount === unsortedArr.length) {\n      clearInterval(interval);\n      this.setState({ isSolved: true });\n    } else if (\n      currentItem === 0 ||\n      unsortedArr[currentItem] > unsortedArr[currentItem - 1]\n    ) {\n      this.setState({\n        currentItem: sortedCount + 1,\n        sortedCount: sortedCount + 1,\n      });\n    } else if (unsortedArr[currentItem] < unsortedArr[currentItem - 1]) {\n      const newUnsortedArr = [...unsortedArr];\n      newUnsortedArr[currentItem] = unsortedArr[currentItem - 1];\n      newUnsortedArr[currentItem - 1] = unsortedArr[currentItem];\n      this.setState({\n        unsortedArr: newUnsortedArr,\n        currentItem: currentItem - 1,\n      });\n    }\n  };\n\n  setAction = () => {\n    this.setState({\n      status: \"Pause\",\n      interval: setInterval(() => {\n        this.sort();\n      }, this.state.delay),\n    });\n  };\n\n  removeAction = () => {\n    clearInterval(this.state.interval);\n    this.setState({\n      status: \"Start\",\n    });\n  };\n\n  changeDelay: EventHandler<SyntheticEvent> = (e) => {\n    const newDelay = +(e.target as HTMLInputElement).value;\n    console.log(this.state.interval);\n    if (this.state.interval) {\n      clearInterval(this.state.interval);\n      this.setState({\n        delay: newDelay,\n        interval: setInterval(() => {\n          this.sort();\n        }, newDelay),\n      });\n    } else {\n      this.setState({\n        delay: newDelay,\n      });\n    }\n  };\n\n  changeArrLength: EventHandler<SyntheticEvent> = (e) => {\n    const newLength = +(e.target as HTMLInputElement).value;\n    if (this.state.interval) clearInterval(this.state.interval);\n    this.setState({\n      unsortedArr: customArr(newLength),\n      currentItem: 1,\n      sortedCount: 1,\n      isSolved: false,\n      status: \"Start\",\n      arrLength: newLength,\n    });\n  };\n\n  componentDidMount() {\n    this.setNewSet();\n  }\n\n  componentWillUnmount() {\n    if (this.state.interval) clearInterval(this.state.interval);\n  }\n\n  render() {\n    const {\n      state,\n      setNewSet,\n      setAction,\n      removeAction,\n      changeArrLength,\n      changeDelay,\n    } = this;\n    const { status, unsortedArr, isSolved, arrLength, delay } = state;\n    return (\n      <Container>\n        <Header />\n        <Visualize unsortedArr={unsortedArr} />\n        <Controls\n          setNewSet={setNewSet}\n          status={status}\n          setAction={setAction}\n          removeAction={removeAction}\n          isSolved={isSolved}\n          arrLength={arrLength}\n          changeArrLength={changeArrLength}\n          delay={delay}\n          changeDelay={changeDelay}\n        />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","export const DELAY = 100;\nexport const LENGTH = 30;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}