{"ast":null,"code":"const defaultState = {\n  value: 0\n};\nexport default function balance(state = defaultState, action) {\n  switch (action.type) {\n    case \"UPDATE_BALANCE\":\n      return {\n        value: action.payload\n      };\n\n    case \"CREDIT\":\n      return {\n        value: state.value - (action.payload ? action.payload : 0)\n      };\n\n    case \"DEBIT\":\n      return {\n        value: state.value + (action.payload ? action.payload : 0)\n      };\n\n    case \"SET_BALANCE_WITH_TAX\":\n      const val = action.payload ? action.payload / 100 : 0;\n      return {\n        value: state.value * (1 - val)\n      };\n\n    default:\n      return state;\n  }\n} // const array = [\n//     { type: \"UPDATE_BALANCE\", payload: 1000.0 },\n//     { type: \"CREDIT\", payload: 200.0 },\n//     { type: \"CREDIT\", payload: 100.0 },\n//     { type: \"SET_BALANCE_WITH_TAX\" payload: 14.0 },\n//     { type: \"DEBIT\", payload: 250.0 },\n//     { type: \"UPDATE_BALANCE\", payload: 1000.0 },\n// ];","map":{"version":3,"sources":["C:/Users/geras/Desktop/bootcamp/home/evo-ts-bootcamp/homeworks/05-redux-basic/src/store/reducer.ts"],"names":["defaultState","value","balance","state","action","type","payload","val"],"mappings":"AAIA,MAAMA,YAAmB,GAAG;AAC1BC,EAAAA,KAAK,EAAE;AADmB,CAA5B;AAIA,eAAe,SAASC,OAAT,CACbC,KAAK,GAAGH,YADK,EAEbI,MAFa,EAGb;AACA,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,gBAAL;AACE,aAAO;AAAEJ,QAAAA,KAAK,EAAEG,MAAM,CAACE;AAAhB,OAAP;;AACF,SAAK,QAAL;AACE,aAAO;AACLL,QAAAA,KAAK,EAAGE,KAAK,CAACF,KAAN,IAAeG,MAAM,CAACE,OAAP,GAAiBF,MAAM,CAACE,OAAxB,GAAkC,CAAjD;AADH,OAAP;;AAGF,SAAK,OAAL;AACE,aAAO;AACLL,QAAAA,KAAK,EAAGE,KAAK,CAACF,KAAN,IAAeG,MAAM,CAACE,OAAP,GAAiBF,MAAM,CAACE,OAAxB,GAAkC,CAAjD;AADH,OAAP;;AAGF,SAAK,sBAAL;AACE,YAAMC,GAAG,GAAGH,MAAM,CAACE,OAAP,GAAiBF,MAAM,CAACE,OAAP,GAAiB,GAAlC,GAAwC,CAApD;AACA,aAAO;AACLL,QAAAA,KAAK,EAAGE,KAAK,CAACF,KAAN,IAAe,IAAIM,GAAnB;AADH,OAAP;;AAGF;AACE,aAAOJ,KAAP;AAjBJ;AAmBD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["interface State {\n  value: number;\n}\n\nconst defaultState: State = {\n  value: 0,\n};\n\nexport default function balance(\n  state = defaultState,\n  action: { type: string; payload?: number }\n) {\n  switch (action.type) {\n    case \"UPDATE_BALANCE\":\n      return { value: action.payload as number };\n    case \"CREDIT\":\n      return {\n        value: (state.value - (action.payload ? action.payload : 0)) as number,\n      };\n    case \"DEBIT\":\n      return {\n        value: (state.value + (action.payload ? action.payload : 0)) as number,\n      };\n    case \"SET_BALANCE_WITH_TAX\":\n      const val = action.payload ? action.payload / 100 : 0;\n      return {\n        value: (state.value * (1 - val)) as number,\n      };\n    default:\n      return state;\n  }\n}\n\n// const array = [\n//     { type: \"UPDATE_BALANCE\", payload: 1000.0 },\n//     { type: \"CREDIT\", payload: 200.0 },\n//     { type: \"CREDIT\", payload: 100.0 },\n//     { type: \"SET_BALANCE_WITH_TAX\" payload: 14.0 },\n//     { type: \"DEBIT\", payload: 250.0 },\n//     { type: \"UPDATE_BALANCE\", payload: 1000.0 },\n// ];\n"]},"metadata":{},"sourceType":"module"}